(()=>{var e={417:e=>{"use strict";e.exports=balanced;function balanced(e,t,n){if(e instanceof RegExp)e=maybeMatch(e,n);if(t instanceof RegExp)t=maybeMatch(t,n);var r=range(e,t,n);return r&&{start:r[0],end:r[1],pre:n.slice(0,r[0]),body:n.slice(r[0]+e.length,r[1]),post:n.slice(r[1]+t.length)}}function maybeMatch(e,t){var n=t.match(e);return n?n[0]:null}balanced.range=range;function range(e,t,n){var r,s,i,a,o;var l=n.indexOf(e);var c=n.indexOf(t,l+1);var f=l;if(l>=0&&c>0){if(e===t){return[l,c]}r=[];i=n.length;while(f>=0&&!o){if(f==l){r.push(f);l=n.indexOf(e,f+1)}else if(r.length==1){o=[r.pop(),c]}else{s=r.pop();if(s<i){i=s;a=c}c=n.indexOf(t,f+1)}f=l<c&&l>=0?l:c}if(r.length){o=[i,a]}}return o}},717:(e,t,n)=>{var r=n(417);e.exports=expandTop;var s="\0SLASH"+Math.random()+"\0";var i="\0OPEN"+Math.random()+"\0";var a="\0CLOSE"+Math.random()+"\0";var o="\0COMMA"+Math.random()+"\0";var l="\0PERIOD"+Math.random()+"\0";function numeric(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function escapeBraces(e){return e.split("\\\\").join(s).split("\\{").join(i).split("\\}").join(a).split("\\,").join(o).split("\\.").join(l)}function unescapeBraces(e){return e.split(s).join("\\").split(i).join("{").split(a).join("}").split(o).join(",").split(l).join(".")}function parseCommaParts(e){if(!e)return[""];var t=[];var n=r("{","}",e);if(!n)return e.split(",");var s=n.pre;var i=n.body;var a=n.post;var o=s.split(",");o[o.length-1]+="{"+i+"}";var l=parseCommaParts(a);if(a.length){o[o.length-1]+=l.shift();o.push.apply(o,l)}t.push.apply(t,o);return t}function expandTop(e){if(!e)return[];if(e.substr(0,2)==="{}"){e="\\{\\}"+e.substr(2)}return expand(escapeBraces(e),true).map(unescapeBraces)}function embrace(e){return"{"+e+"}"}function isPadded(e){return/^-?0\d/.test(e)}function lte(e,t){return e<=t}function gte(e,t){return e>=t}function expand(e,t){var n=[];var s=r("{","}",e);if(!s)return[e];var i=s.pre;var o=s.post.length?expand(s.post,false):[""];if(/\$$/.test(s.pre)){for(var l=0;l<o.length;l++){var c=i+"{"+s.body+"}"+o[l];n.push(c)}}else{var f=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(s.body);var h=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(s.body);var u=f||h;var p=s.body.indexOf(",")>=0;if(!u&&!p){if(s.post.match(/,.*\}/)){e=s.pre+"{"+s.body+a+s.post;return expand(e)}return[e]}var d;if(u){d=s.body.split(/\.\./)}else{d=parseCommaParts(s.body);if(d.length===1){d=expand(d[0],false).map(embrace);if(d.length===1){return o.map((function(e){return s.pre+d[0]+e}))}}}var g;if(u){var b=numeric(d[0]);var v=numeric(d[1]);var w=Math.max(d[0].length,d[1].length);var y=d.length==3?Math.abs(numeric(d[2])):1;var x=lte;var O=v<b;if(O){y*=-1;x=gte}var E=d.some(isPadded);g=[];for(var j=b;x(j,v);j+=y){var M;if(h){M=String.fromCharCode(j);if(M==="\\")M=""}else{M=String(j);if(E){var _=w-M.length;if(_>0){var k=new Array(_+1).join("0");if(j<0)M="-"+k+M.slice(1);else M=k+M}}}g.push(M)}}else{g=[];for(var C=0;C<d.length;C++){g.push.apply(g,expand(d[C],false))}}for(var C=0;C<g.length;C++){for(var l=0;l<o.length;l++){var c=i+g[C]+o[l];if(!t||u||c)n.push(c)}}}return n}},917:e=>{const t=typeof process==="object"&&process&&process.platform==="win32";e.exports=t?{sep:"\\"}:{sep:"/"}},973:(e,t,n)=>{const r=e.exports=(e,t,n={})=>{assertValidPattern(t);if(!n.nocomment&&t.charAt(0)==="#"){return false}return new Minimatch(t,n).match(e)};e.exports=r;const s=n(917);r.sep=s.sep;const i=Symbol("globstar **");r.GLOBSTAR=i;const a=n(717);const o={"!":{open:"(?:(?!(?:",close:"))[^/]*?)"},"?":{open:"(?:",close:")?"},"+":{open:"(?:",close:")+"},"*":{open:"(?:",close:")*"},"@":{open:"(?:",close:")"}};const l="[^/]";const c=l+"*?";const f="(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?";const h="(?:(?!(?:\\/|^)\\.).)*?";const charSet=e=>e.split("").reduce(((e,t)=>{e[t]=true;return e}),{});const u=charSet("().*{}+?[]^$\\!");const p=charSet("[.(");const d=/\/+/;r.filter=(e,t={})=>(n,s,i)=>r(n,e,t);const ext=(e,t={})=>{const n={};Object.keys(e).forEach((t=>n[t]=e[t]));Object.keys(t).forEach((e=>n[e]=t[e]));return n};r.defaults=e=>{if(!e||typeof e!=="object"||!Object.keys(e).length){return r}const t=r;const m=(n,r,s)=>t(n,r,ext(e,s));m.Minimatch=class Minimatch extends t.Minimatch{constructor(t,n){super(t,ext(e,n))}};m.Minimatch.defaults=n=>t.defaults(ext(e,n)).Minimatch;m.filter=(n,r)=>t.filter(n,ext(e,r));m.defaults=n=>t.defaults(ext(e,n));m.makeRe=(n,r)=>t.makeRe(n,ext(e,r));m.braceExpand=(n,r)=>t.braceExpand(n,ext(e,r));m.match=(n,r,s)=>t.match(n,r,ext(e,s));return m};r.braceExpand=(e,t)=>braceExpand(e,t);const braceExpand=(e,t={})=>{assertValidPattern(e);if(t.nobrace||!/\{(?:(?!\{).)*\}/.test(e)){return[e]}return a(e)};const g=1024*64;const assertValidPattern=e=>{if(typeof e!=="string"){throw new TypeError("invalid pattern")}if(e.length>g){throw new TypeError("pattern is too long")}};const b=Symbol("subparse");r.makeRe=(e,t)=>new Minimatch(e,t||{}).makeRe();r.match=(e,t,n={})=>{const r=new Minimatch(t,n);e=e.filter((e=>r.match(e)));if(r.options.nonull&&!e.length){e.push(t)}return e};const globUnescape=e=>e.replace(/\\(.)/g,"$1");const regExpEscape=e=>e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");class Minimatch{constructor(e,t){assertValidPattern(e);if(!t)t={};this.options=t;this.set=[];this.pattern=e;this.windowsPathsNoEscape=!!t.windowsPathsNoEscape||t.allowWindowsEscape===false;if(this.windowsPathsNoEscape){this.pattern=this.pattern.replace(/\\/g,"/")}this.regexp=null;this.negate=false;this.comment=false;this.empty=false;this.partial=!!t.partial;this.make()}debug(){}make(){const e=this.pattern;const t=this.options;if(!t.nocomment&&e.charAt(0)==="#"){this.comment=true;return}if(!e){this.empty=true;return}this.parseNegate();let n=this.globSet=this.braceExpand();if(t.debug)this.debug=(...e)=>console.error(...e);this.debug(this.pattern,n);n=this.globParts=n.map((e=>e.split(d)));this.debug(this.pattern,n);n=n.map(((e,t,n)=>e.map(this.parse,this)));this.debug(this.pattern,n);n=n.filter((e=>e.indexOf(false)===-1));this.debug(this.pattern,n);this.set=n}parseNegate(){if(this.options.nonegate)return;const e=this.pattern;let t=false;let n=0;for(let r=0;r<e.length&&e.charAt(r)==="!";r++){t=!t;n++}if(n)this.pattern=e.substr(n);this.negate=t}matchOne(e,t,n){var r=this.options;this.debug("matchOne",{this:this,file:e,pattern:t});this.debug("matchOne",e.length,t.length);for(var s=0,a=0,o=e.length,l=t.length;s<o&&a<l;s++,a++){this.debug("matchOne loop");var c=t[a];var f=e[s];this.debug(t,c,f);if(c===false)return false;if(c===i){this.debug("GLOBSTAR",[t,c,f]);var h=s;var u=a+1;if(u===l){this.debug("** at the end");for(;s<o;s++){if(e[s]==="."||e[s]===".."||!r.dot&&e[s].charAt(0)===".")return false}return true}while(h<o){var p=e[h];this.debug("\nglobstar while",e,h,t,u,p);if(this.matchOne(e.slice(h),t.slice(u),n)){this.debug("globstar found match!",h,o,p);return true}else{if(p==="."||p===".."||!r.dot&&p.charAt(0)==="."){this.debug("dot detected!",e,h,t,u);break}this.debug("globstar swallow a segment, and continue");h++}}if(n){this.debug("\n>>> no match, partial?",e,h,t,u);if(h===o)return true}return false}var d;if(typeof c==="string"){d=f===c;this.debug("string match",c,f,d)}else{d=f.match(c);this.debug("pattern match",c,f,d)}if(!d)return false}if(s===o&&a===l){return true}else if(s===o){return n}else if(a===l){return s===o-1&&e[s]===""}throw new Error("wtf?")}braceExpand(){return braceExpand(this.pattern,this.options)}parse(e,t){assertValidPattern(e);const n=this.options;if(e==="**"){if(!n.noglobstar)return i;else e="*"}if(e==="")return"";let r="";let s=!!n.nocase;let a=false;const f=[];const h=[];let d;let g=false;let v=-1;let w=-1;let y;let x;let O;const E=e.charAt(0)==="."?"":n.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)";const clearStateChar=()=>{if(d){switch(d){case"*":r+=c;s=true;break;case"?":r+=l;s=true;break;default:r+="\\"+d;break}this.debug("clearStateChar %j %j",d,r);d=false}};for(let t=0,i;t<e.length&&(i=e.charAt(t));t++){this.debug("%s\t%s %s %j",e,t,r,i);if(a){if(i==="/"){return false}if(u[i]){r+="\\"}r+=i;a=false;continue}switch(i){case"/":{return false}case"\\":clearStateChar();a=true;continue;case"?":case"*":case"+":case"@":case"!":this.debug("%s\t%s %s %j <-- stateChar",e,t,r,i);if(g){this.debug("  in class");if(i==="!"&&t===w+1)i="^";r+=i;continue}this.debug("call clearStateChar %j",d);clearStateChar();d=i;if(n.noext)clearStateChar();continue;case"(":if(g){r+="(";continue}if(!d){r+="\\(";continue}f.push({type:d,start:t-1,reStart:r.length,open:o[d].open,close:o[d].close});r+=d==="!"?"(?:(?!(?:":"(?:";this.debug("plType %j %j",d,r);d=false;continue;case")":if(g||!f.length){r+="\\)";continue}clearStateChar();s=true;x=f.pop();r+=x.close;if(x.type==="!"){h.push(x)}x.reEnd=r.length;continue;case"|":if(g||!f.length){r+="\\|";continue}clearStateChar();r+="|";continue;case"[":clearStateChar();if(g){r+="\\"+i;continue}g=true;w=t;v=r.length;r+=i;continue;case"]":if(t===w+1||!g){r+="\\"+i;continue}y=e.substring(w+1,t);try{RegExp("["+y+"]")}catch(e){O=this.parse(y,b);r=r.substr(0,v)+"\\["+O[0]+"\\]";s=s||O[1];g=false;continue}s=true;g=false;r+=i;continue;default:clearStateChar();if(u[i]&&!(i==="^"&&g)){r+="\\"}r+=i;break}}if(g){y=e.substr(w+1);O=this.parse(y,b);r=r.substr(0,v)+"\\["+O[0];s=s||O[1]}for(x=f.pop();x;x=f.pop()){let e;e=r.slice(x.reStart+x.open.length);this.debug("setting tail",r,x);e=e.replace(/((?:\\{2}){0,64})(\\?)\|/g,((e,t,n)=>{if(!n){n="\\"}return t+t+n+"|"}));this.debug("tail=%j\n   %s",e,e,x,r);const t=x.type==="*"?c:x.type==="?"?l:"\\"+x.type;s=true;r=r.slice(0,x.reStart)+t+"\\("+e}clearStateChar();if(a){r+="\\\\"}const j=p[r.charAt(0)];for(let e=h.length-1;e>-1;e--){const n=h[e];const s=r.slice(0,n.reStart);const i=r.slice(n.reStart,n.reEnd-8);let a=r.slice(n.reEnd);const o=r.slice(n.reEnd-8,n.reEnd)+a;const l=s.split("(").length-1;let c=a;for(let e=0;e<l;e++){c=c.replace(/\)[+*?]?/,"")}a=c;const f=a===""&&t!==b?"$":"";r=s+i+a+f+o}if(r!==""&&s){r="(?=.)"+r}if(j){r=E+r}if(t===b){return[r,s]}if(!s){return globUnescape(e)}const M=n.nocase?"i":"";try{return Object.assign(new RegExp("^"+r+"$",M),{_glob:e,_src:r})}catch(e){return new RegExp("$.")}}makeRe(){if(this.regexp||this.regexp===false)return this.regexp;const e=this.set;if(!e.length){this.regexp=false;return this.regexp}const t=this.options;const n=t.noglobstar?c:t.dot?f:h;const r=t.nocase?"i":"";let s=e.map((e=>{e=e.map((e=>typeof e==="string"?regExpEscape(e):e===i?i:e._src)).reduce(((e,t)=>{if(!(e[e.length-1]===i&&t===i)){e.push(t)}return e}),[]);e.forEach(((t,r)=>{if(t!==i||e[r-1]===i){return}if(r===0){if(e.length>1){e[r+1]="(?:\\/|"+n+"\\/)?"+e[r+1]}else{e[r]=n}}else if(r===e.length-1){e[r-1]+="(?:\\/|"+n+")?"}else{e[r-1]+="(?:\\/|\\/"+n+"\\/)"+e[r+1];e[r+1]=i}}));return e.filter((e=>e!==i)).join("/")})).join("|");s="^(?:"+s+")$";if(this.negate)s="^(?!"+s+").*$";try{this.regexp=new RegExp(s,r)}catch(e){this.regexp=false}return this.regexp}match(e,t=this.partial){this.debug("match",e,this.pattern);if(this.comment)return false;if(this.empty)return e==="";if(e==="/"&&t)return true;const n=this.options;if(s.sep!=="/"){e=e.split(s.sep).join("/")}e=e.split(d);this.debug(this.pattern,"split",e);const r=this.set;this.debug(this.pattern,"set",r);let i;for(let t=e.length-1;t>=0;t--){i=e[t];if(i)break}for(let s=0;s<r.length;s++){const a=r[s];let o=e;if(n.matchBase&&a.length===1){o=[i]}const l=this.matchOne(o,a,t);if(l){if(n.flipNegate)return true;return!this.negate}}if(n.flipNegate)return false;return this.negate}static defaults(e){return r.defaults(e).Minimatch}}r.Minimatch=Minimatch},147:e=>{"use strict";e.exports=require("fs")}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var s=t[n]={exports:{}};var i=true;try{e[n](s,s.exports,__nccwpck_require__);i=false}finally{if(i)delete t[n]}return s.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var n={};(()=>{const e=__nccwpck_require__(147);const t=__nccwpck_require__(973);function buildCodeownersMap(){const e=["# Universal Owner of all files","# * @god","","# Owner of all files in the first level of the root directory","/* @ownerOfFirstLevelOfRootDirectory","","# Owner of all .yml files","*.yml @ymlOwner","","# Owner of all files in a directory","/node_modules/ @nodeModulesOwner","","# Owner of a specific directory path","/src/nSECURE/juice-shop/ @juiceShopOwner # Test Inline Comment","","# Owner of all files in the first level of a hidden directory",".github/* @githubOwner","","# Owner of all files in the first level of a directory","src/* @srcOwnerFirstLevel","","# Owner of a subdirectory anywhere","objects/ @objectsOwner","","# Valid syntax for unowned file","LICENSE"];let t;const n=new Map;for(let r of e){if(r.substring(0,1)!="#"&&r.length>1){t=r.split(" ");if(t.length>1){t[0]=cleanPath(t[0]);n.set(t[0],getCodeowners(t))}}}return n}function cleanPath(e){if(e!="/*"&&e.substring(0,1)=="/"){e=e.substring(1)}return e}function getChangedFilesWithoutOwnership(e,t,n){const r=[...t.keys()];let s=[...e];for(let t of e){n.forEach((e=>{if(t.includes(e)){removeFromList(s,t)}}));for(let e of r){if(e=="*"||e=="/"){return[]}if(isMatch(t,e)){console.log("a match has been found for: "+t+" and "+e);console.log("");removeFromList(s,t)}}}return s}function getCodeowners(e){e.splice(0,1);for(let t=0;t<e.length;t++){if(e[t].substring(0,1)=="#"){e.splice(t)}}return[...e]}async function getTeams(e){const t=await new Octokit({auth:e}).request("GET /orgs/ncino/teams");console.log(t);for(let e of t.data){validTeams.push(e.name)}}function isFileExtensionMatch(e,t){if(t.substring(0,2)=="*."){return e.includes(t.substring(1))}return false}function isFirstLevelDirectoryMatch(e,t){if(t.indexOf("/*")!==-1){if(t=="/*"){return!e.includes("/")}else{let n=e.split("/");let r=n[n.length-2];return t.includes(r)}}return false}function isFullDirectoryMatch(e,t){if(t.substring(t.length-1)=="/"){return e.includes(t.substring(1))}return false}function isMatch(e,n){const r=[t,isFileExtensionMatch,isFullDirectoryMatch,isFirstLevelDirectoryMatch];for(let t of r){if(t(e,n)){return true}}return false}function removeFromList(e,t){let n=e.indexOf(t);if(e[n]==t){e.splice(e.indexOf(t),1)}}function validateCodeowners(){const e=null;const t=["src/action.js","src/objects/testObject.js","LICENSE","package.json",".github/workflows/ExampleWorkflow.yml","src/nSECURE/juice-shop/classes/JuiceShopController.cls","dist/index.js","src/dependencies/ignoreThisDependency"];const n=".git/ .sfdx/ .idea/ .vscode/ src/dependencies/";const r=n.split(" ");const s=["@garretpatten"];const i=buildCodeownersMap();console.log("codeownersMap");console.log(i);console.log("");const a=getChangedFilesWithoutOwnership(t,i,r);console.log("");console.log("Changed files without ownership in this commit:");console.log(a);if(s!=null){let e=[];let t;for(let n of i.keys()){t=i.get(n);t.forEach((t=>{if(!s.includes(t)){e.push(t)}}))}if(e.length>0){let t="There are invalid Teams in the CODEOWNERS file: ";e.forEach((e=>{t+=e+" "}));console.log(t)}}console.log((new Date).toTimeString())}validateCodeowners()})();module.exports=n})();