name: Codeowner Verifier

on: pull_request

env:
  ACTIONS_STEP_DEBUG: false

permissions:
  contents: read

jobs:
  verify-codeowners:
    if: ${{ github.actor != 'dependabot[bot]' && github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    timeout-minutes: 5
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.number }}
      cancel-in-progress: true

    steps:
      - name: Harden Alpine Container
        run: |
          # Add non-root user for operations that don't require root
          addgroup -S appgroup && adduser -S appuser -G appgroup

          # Disable unnecessary services and features
          rm -f /etc/securetty

          # Set secure umask
          umask 027

          # Make sensitive directories read-only where possible
          mount -o remount,ro /etc 2>/dev/null || true
          mount -o remount,ro /bin 2>/dev/null || true
          mount -o remount,ro /sbin 2>/dev/null || true
          mount -o remount,ro /lib 2>/dev/null || true

          # Clear any unnecessary environment variables
          unset HISTFILE HISTSIZE HISTFILESIZE

          # Set PATH explicitly to avoid path-based attacks
          export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

      - name: Install Minimal Dependencies
        run: apk add --no-cache ca-certificates git

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0
          token: $GITHUB_TOKEN

      - name: Configure Git Safe Directory
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Identify Changed Files
        id: diff
        run: |
          git fetch origin $GITHUB_BASE_REF --depth=1
          git_diff="$(git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA)"
          git_diff_fixed="$(echo $git_diff | tr '\n' ' ' )"
          echo "git_diff=$git_diff_fixed" >> $GITHUB_OUTPUT

      - name: Identify Deleted Files
        id: deleted
        run: |
          git fetch origin $GITHUB_BASE_REF --depth=1
          git_diff_deleted="$(git diff --name-only --diff-filter=D origin/$GITHUB_BASE_REF $GITHUB_SHA)"
          git_diff_deleted_fixed="$(echo $git_diff_deleted | tr '\n' ' ' )"
          echo "git_diff_deleted=$git_diff_deleted_fixed" >> $GITHUB_OUTPUT

      - name: Verify CODEOWNERS
        continue-on-error: true
        id: codeowner-verifier
        uses: ncino/codeowner-verifier@master
        with:
          changedFiles: ${{ steps.diff.outputs.git_diff }}
          deletedFiles: ${{ steps.deleted.outputs.git_diff_deleted }}
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Comment on PR
        if: steps.codeowner-verifier.outcome == 'failure'
        id: comment
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
        with:
          github-token: ${{ secrets.BOBBY_TABLES_PAT }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body:`> [!WARNING]
                \*\*The Codeowner Verifier has detected changed files without ownership in this pull request.\*\*
              \>
              ${{ steps.codeowner-verifier.outputs.errorMessage }}
              \>
              \> _Please contact @ncino/product-security or join [#help-product-security](https://ncino.slack.com/archives/C02G4R09NUU) for assistance._`
            })

      - name: Fail Check if Codeowner Verifier Fails
        if: steps.codeowner-verifier.outcome == 'failure'
        id: failure
        run: |
          exit 1

      - name: Container Cleanup
        if: always()
        run: |
          find $GITHUB_WORKSPACE -mindepth 1 -delete || echo "Container Cleanup Complete"
        shell: sh

      - name: Final Runner Cleanup
        if: always()
        run: |
          # Thoroughly clean workspace
          find $GITHUB_WORKSPACE -mindepth 1 -delete 2>/dev/null || \
          rm -rf $GITHUB_WORKSPACE/* $GITHUB_WORKSPACE/.[!.]* 2>/dev/null
